<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<!-- 
	Profile hsqldb runs on a local in memory database
	Profile gcloudmysql runs on a preconfigured google cloud database
	Deploy to google cloud via command line: mvnw -DskipTests=true -P gcloudmysql appengine:deploy
	Run the existing install in google cloud: https://spring-pet-clinic-sharad.appspot.com/vets
	 -->
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>sharad-petclinic</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>sharad-petclinic</name>
	<description>Pet Clinic project by Sharad</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.BUILD-SNAPSHOT</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- Web dependencies -->
		<webjars-bootstrap.version>3.3.6</webjars-bootstrap.version>
		<webjars-jquery-ui.version>1.11.4</webjars-jquery-ui.version>
		<webjars-jquery.version>2.2.4</webjars-jquery.version>
		<wro4j.version>1.8.0</wro4j.version>
	</properties>

	<dependencies>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- webjars -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webjars-locator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${webjars-jquery.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery-ui</artifactId>
			<version>${webjars-jquery-ui.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${webjars-bootstrap.version}</version>
		</dependency>
		<!-- end of webjars -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- https://wro4j.readthedocs.io/en/stable/MavenPlugin/ -->
			<plugin>
				<groupId>ro.isdc.wro4j</groupId>
				<artifactId>wro4j-maven-plugin</artifactId>
				<version>${wro4j.version}</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
					<cssDestinationFolder>${project.build.directory}/classes/static/resources/css</cssDestinationFolder>
					<wroFile>${basedir}/src/main/wro/wro.xml</wroFile>
					<extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
					<contextFolder>${basedir}/src/main/less</contextFolder>
					<!-- ignoreMissingResources if false, the build will fail if at least 
						one resource is missing or cannot be accessed, otherwise only a warning will 
						be displayed -->
					<ignoreMissingResources>false</ignoreMissingResources>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.webjars</groupId>
						<artifactId>bootstrap</artifactId>
						<version>${webjars-bootstrap.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>hsqldb</id>
			<properties>
				<database>hsqldb</database>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.hsqldb</groupId>
					<artifactId>hsqldb</artifactId>
					<scope>runtime</scope>
				</dependency>

			</dependencies>
		</profile>
		<profile>
		<!-- 
		Run locally using gcloud mysql database or deploy app to google flexible app engine and run
		via https://spring-pet-clinic-sharad.appspot.com/
		The steps for accomplishing this were inspired by:
		https://cloud.google.com/community/tutorials/run-spring-petclinic-on-app-engine-cloudsql
		 -->
			<id>gcloudmysql</id>
			<properties>
				<database>mysql</database>
			</properties>
			<dependencies>
				<!-- MySQL Socket Factory for Cloud SQL -->
				<!-- https://mvnrepository.com/artifact/com.google.cloud.sql/mysql-socket-factory -->
				<dependency>
					<groupId>com.google.cloud.sql</groupId>
					<artifactId>mysql-socket-factory</artifactId>
					<version>1.0.3</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- Maven plugin to deploy application to Google Cloud App Engine Environment -->
					<!-- https://mvnrepository.com/artifact/com.google.cloud.tools/appengine-maven-plugin -->
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>appengine-maven-plugin</artifactId>
						<version>1.3.0</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
